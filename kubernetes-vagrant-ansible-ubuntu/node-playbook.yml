---
- hosts: localhost
  become: yes
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
       pkg:
         - apt-transport-https
         - ca-certificates
         - curl
         - gnupg-agent
         - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
      - docker status
  - name: Enable service docker, and enable persistently
    service:
       name: docker
       enabled: yes

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none
  - name: Disable firewall and swap
    shell: modprobe br_netfilter
    shell: sudo sysctl net.bridge.bridge-nf-call-iptables=1
    shell: sudo ufw disable
  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip="192.168.50.10"
      create: yes
  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config
    become: false
    become_user: vagrant
#RESTART the containerd service as it is a preflight requirement. Also Restart the 'kubelet'
  - name: Remove Config File
    command: rm /etc/containerd/config.toml
  - name: Restart Containerd  
    service:
      name: containerd
      daemon_reload: yes
      state: restarted
  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
handlers:
    - name: docker status
      service: name=docker state=started
